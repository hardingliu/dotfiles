#
# A simple theme that displays relevant, contextual information.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
# Screenshots:
#   http://i.imgur.com/nrGV6pg.png
#
# Modified by Zongming Liu <zongmingxliu@gmail.com>

#
# 16 Terminal Colors
# -- ---------------
#  0 black
#  1 red
#  2 green
#  3 yellow
#  4 blue
#  5 magenta
#  6 cyan
#  7 white
#  8 bright black
#  9 bright red
# 10 bright green
# 11 bright yellow
# 12 bright blue
# 13 bright magenta
# 14 bright cyan
# 15 bright white

#
# Prompt setup function commonly used by prompt themes.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

function prompt-pwd {

setopt localoptions extendedglob

local current_pwd="${PWD/#$HOME/~}"
local ret_directory

if [[ "$current_pwd" == (#m)[/~] ]]; then
  ret_directory="$MATCH"
  unset MATCH
elif zstyle -m ':prezto:module:prompt' pwd-length 'full'; then
  ret_directory=${PWD}
elif zstyle -m ':prezto:module:prompt' pwd-length 'long'; then
  ret_directory=${current_pwd}
else
  ret_directory="${${${${(@j:/:M)${(@s:/:)current_pwd}##.#?}:h}%/}//\%/%%}/${${current_pwd:t}//\%/%%}"
fi

unset current_pwd

print "$ret_directory"

}

function update_terminal_cwd {
  if [[ "$TERM_PROGRAM" == "Apple_Terminal" ]] && [[ -z "$INSIDE_EMACS" ]]; then
    # Identify the directory using a "file:" scheme URL, including
    # the host name to disambiguate local vs. remote paths.
    # Percent-encode the pathname.
    local URL_PATH=''
    {
      # Use LC_CTYPE=C to process text byte-by-byte.
      local i ch hexch LC_CTYPE=C
      for ((i = 1; i <= ${#PWD}; ++i)); do
        ch="$PWD[i]"
        if [[ "$ch" =~ [/._~A-Za-z0-9-] ]]; then
          URL_PATH+="$ch"
        else
          hexch=$(printf "%02X" "'$ch")
          URL_PATH+="%$hexch"
        fi
      done
    }
    local PWD_URL="file://$HOST$URL_PATH"
    printf '\e]7;%s\a' "$PWD_URL"
  fi
}

# from pure zsh prompt
prompt_pure_set_title() {
  setopt localoptions noshwordsplit

  # emacs terminal does not support settings the title
  (( ${+EMACS} )) && return

  case $TTY in
    # Don't set title over serial console.
    /dev/ttyS[0-9]*) return;;
  esac

  # tell the terminal we are setting the title
  print -n '\e]0;'
  # show hostname if connected through ssh
  [[ -n $SSH_CONNECTION ]] && print -Pn '(%m) '
  case $1 in
    expand-prompt)
      print -Pn $2;;
    ignore-escape)
      print -rn $2;;
  esac
  # end set title
  print -n '\a'
}

function prompt_zl_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  _prompt_zl_pwd=$(prompt-pwd)

  # update_terminal_cwd

  prompt_pure_set_title 'ignore-escape' "$2"
}

function prompt_zl_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent sp subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook.
  add-zsh-hook precmd prompt_zl_precmd

  # Set editor parameters
  zstyle ':prezto:module:editor:info:completing' format '%B%F{7}...%f%b'

  # Define prompts.
  PROMPT='%B%F{0}[%f%b%(!.%B%F{1}%n@%m%f%b.%B%F{5}%n@%m%f%b) %B%F{4}${_prompt_zl_pwd}%f%b%B%F{0}]%f%b%(!.%B%F{1}#%f%b.%B%F{5}Î»%f%b) '
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

function prompt_zl_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2> /dev/null
  prompt_preview_theme 'zl'
}

prompt_zl_setup "$@"
